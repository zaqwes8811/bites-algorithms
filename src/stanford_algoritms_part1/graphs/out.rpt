Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00   107513     0.00     0.00  std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
  0.00      0.00     0.00    64074     0.00     0.00  std::vector<int, std::allocator<int> >::end() const
  0.00      0.00     0.00     8469     0.00     0.00  std::vector<int, std::allocator<int> >::reserve(unsigned int)
  0.00      0.00     0.00     7870     0.00     0.00  main
  0.00      0.00     0.00     7668     0.00     0.00  int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
  0.00      0.00     0.00     3604     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  0.00      0.00     0.00     2000     0.00     0.00  bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&)
  0.00      0.00     0.00     1404     0.00     0.00  std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00      0.00     0.00     1200     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      0.00     0.00     1000     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&)
  0.00      0.00     0.00     1000     0.00     0.00  int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.00      0.00     0.00      800     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      0.00     0.00      800     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.00     0.00      400     0.00     0.00  __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator*() const
  0.00      0.00     0.00      400     0.00     0.00  std::vector<int, std::allocator<int> >::begin() const
  0.00      0.00     0.00      400     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00      400     0.00     0.00  std::string* std::vector<std::string, std::allocator<std::string> >::_M_allocate_and_copy<std::string*>(unsigned int, std::string*, std::string*)
  0.00      0.00     0.00      400     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::begin()
  0.00      0.00     0.00      400     0.00     0.00  int* std::copy_backward<int*, int*>(int*, int*, int*)
  0.00      0.00     0.00      400     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      0.00     0.00      200     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00      200     0.00     0.00  __gnu_cxx::new_allocator<int>::construct(int*, int const&)
  0.00      0.00     0.00      200     0.00     0.00  void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&)
  0.00      0.00     0.00      200     0.00     0.00  __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator++()
  0.00      0.00     0.00      200     0.00     0.00  __gnu_cxx::__normal_iterator<char*, std::string>::operator++()
  0.00      0.00     0.00      200     0.00     0.00  bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&)
  0.00      0.00     0.00      200     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00      200     0.00     0.00  std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned int)
  0.00      0.00     0.00      200     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int)
  0.00      0.00     0.00      200     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int const&)
  0.00      0.00     0.00      200     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      0.00     0.00      200     0.00     0.00  int* std::copy<int*, int*>(int*, int*, int*)
  0.00      0.00     0.00      200     0.00     0.00  __do_global_dtors_aux
  0.00      0.00     0.00        1     0.00     0.00  void __gnu_cxx::__alloc_traits<std::allocator<std::string> >::construct<std::string>(std::allocator<std::string>&, std::string*, std::string const&)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::__normal_iterator(std::string* const&)
  0.00      0.00     0.00        1     0.00     0.00  int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
  0.00      0.00     0.00        1     0.00     0.00  void std::replace<__gnu_cxx::__normal_iterator<char*, std::string>, char>(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const&, char const&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
[1]      0.0    0.00    0.00    9270+122450  <cycle 1 as a whole> [1]
                0.00    0.00  107513             std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
                0.00    0.00    7870+602         main <cycle 1> [4]
                0.00    0.00    8469             std::vector<int, std::allocator<int> >::reserve(unsigned int) <cycle 1> [12]
                0.00    0.00    7668             int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) <cycle 1> [13]
                0.00    0.00     200             std::vector<int, std::allocator<int> >::push_back(int const&) <cycle 1> [38]
-----------------------------------------------
[2]      0.0    0.00    0.00    3404+6205    <cycle 2 as a whole> [2]
                0.00    0.00    3604+401         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
                0.00    0.00    2000             bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&) <cycle 2> [15]
                0.00    0.00    1404+1           std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                0.00    0.00     800             __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) <cycle 2> [21]
                0.00    0.00     800             std::vector<int, std::allocator<int> >::end() <cycle 2> [20]
                0.00    0.00     400             std::vector<int, std::allocator<int> >::begin() const <cycle 2> [23]
                0.00    0.00     200             void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&) <cycle 2> [31]
                0.00    0.00     200             std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned int) <cycle 2> [36]
                0.00    0.00     200             int* std::copy<int*, int*>(int*, int*, int*) <cycle 2> [40]
                0.00    0.00       1             void __gnu_cxx::__alloc_traits<std::allocator<std::string> >::construct<std::string>(std::allocator<std::string>&, std::string*, std::string const&) <cycle 2> [42]
-----------------------------------------------
[3]      0.0    0.00    0.00     400+1400    <cycle 3 as a whole> [3]
                0.00    0.00    1000             int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) <cycle 3> [19]
                0.00    0.00     400             std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() <cycle 3> [24]
                0.00    0.00     400             int* std::copy_backward<int*, int*>(int*, int*, int*) <cycle 3> [27]
-----------------------------------------------
                                 602             main <cycle 1> [4]
                                7668             int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) <cycle 1> [13]
                0.00    0.00       1/9270        process_data_line(std::string const&) [47]
                0.00    0.00       1/9270        std::vector<int, std::allocator<int> >::_M_check_len(unsigned int, char const*) const [83]
                0.00    0.00     200/9270        frame_dummy [8]
[4]      0.0    0.00    0.00    7870+602     main <cycle 1> [4]
                0.00    0.00     800/3404        bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&) <cycle 2> [15]
                0.00    0.00     600/1000        std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&) [18]
                0.00    0.00     200/200         __do_global_dtors_aux [41]
                0.00    0.00       1/1           void std::replace<__gnu_cxx::__normal_iterator<char*, std::string>, char>(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const&, char const&) [45]
                                 201             std::vector<int, std::allocator<int> >::reserve(unsigned int) <cycle 1> [12]
                                 200             std::vector<int, std::allocator<int> >::push_back(int const&) <cycle 1> [38]
                                 602             main <cycle 1> [4]
-----------------------------------------------
                              106513             std::vector<int, std::allocator<int> >::reserve(unsigned int) <cycle 1> [12]
                0.00    0.00     200/9270        _GLOBAL__sub_I__Z17process_data_lineRKSs [46]
                0.00    0.00     200/9270        std::vector<int, std::allocator<int> >::~vector() [39]
                0.00    0.00     200/9270        std::vector<std::string, std::allocator<std::string> >::~vector() [119]
                0.00    0.00     400/9270        __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::__normal_iterator<std::string*>(__gnu_cxx::__normal_iterator<std::string*, __gnu_cxx::__enable_if<std::__are_same<std::string*, std::string*>::__value, std::vector<std::string, std::allocator<std::string> > >::__type> const&) [63]
[10]     0.0    0.00    0.00  107513         std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
                0.00    0.00   64074/64074       std::vector<int, std::allocator<int> >::end() const [11]
                0.00    0.00     200/3404        std::vector<int, std::allocator<int> >::begin() const <cycle 2> [23]
                0.00    0.00     200/3404        bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&) <cycle 2> [15]
                0.00    0.00     200/3404        std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                                7668             int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) <cycle 1> [13]
-----------------------------------------------
                0.00    0.00   64074/64074       std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
[11]     0.0    0.00    0.00   64074         std::vector<int, std::allocator<int> >::end() const [11]
-----------------------------------------------
                                 200             std::vector<int, std::allocator<int> >::push_back(int const&) <cycle 1> [38]
                                 201             main <cycle 1> [4]
                0.00    0.00     200/9270        __static_initialization_and_destruction_0(int, int) [29]
                0.00    0.00    7868/9270        process_data_line(std::string const&) [47]
[12]     0.0    0.00    0.00    8469         std::vector<int, std::allocator<int> >::reserve(unsigned int) <cycle 1> [12]
                0.00    0.00       1/3404        std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                              106513             std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
-----------------------------------------------
                                7668             std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
[13]     0.0    0.00    0.00    7668         int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) <cycle 1> [13]
                                7668             main <cycle 1> [4]
-----------------------------------------------
                                 401             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
                                   1             void __gnu_cxx::__alloc_traits<std::allocator<std::string> >::construct<std::string>(std::allocator<std::string>&, std::string*, std::string const&) <cycle 2> [42]
                                 200             std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned int) <cycle 2> [36]
                                 400             std::vector<int, std::allocator<int> >::begin() const <cycle 2> [23]
                                 400             int* std::copy<int*, int*>(int*, int*, int*) <cycle 2> [40]
                                 800             std::vector<int, std::allocator<int> >::end() <cycle 2> [20]
                                1603             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                0.00    0.00     200/3404        std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
[14]     0.0    0.00    0.00    3604+401     std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
                0.00    0.00    1000/1200        std::vector<int, std::allocator<int> >::begin() [17]
                0.00    0.00     400/400         int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) <cycle 3> [19]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::__normal_iterator(std::string* const&) [43]
                0.00    0.00       1/1           int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&) [44]
                                 800             __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) <cycle 2> [21]
                                 200             int* std::copy<int*, int*>(int*, int*, int*) <cycle 2> [40]
                                 401             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
-----------------------------------------------
                                 200             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                0.00    0.00     200/3404        operator new(unsigned int, void*) [158]
                0.00    0.00     200/3404        std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [156]
                0.00    0.00     200/3404        std::vector<int, std::allocator<int> >::size() const [84]
                0.00    0.00     200/3404        std::vector<std::string, std::allocator<std::string> >::vector() [118]
                0.00    0.00     200/3404        std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
                0.00    0.00     800/3404        main <cycle 1> [4]
[15]     0.0    0.00    0.00    2000         bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&) <cycle 2> [15]
                                 800             std::vector<int, std::allocator<int> >::end() <cycle 2> [20]
-----------------------------------------------
                                   1             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                                 200             __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) <cycle 2> [21]
                0.00    0.00       1/3404        std::vector<int, std::allocator<int> >::reserve(unsigned int) <cycle 1> [12]
                0.00    0.00       3/3404        void std::replace<__gnu_cxx::__normal_iterator<char*, std::string>, char>(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const&, char const&) [45]
                0.00    0.00     200/3404        std::vector<int, std::allocator<int> >::size() const [84]
                0.00    0.00     200/3404        std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
                0.00    0.00     400/3404        std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&) [18]
                0.00    0.00     400/3404        std::vector<std::string, std::allocator<std::string> >::begin() [26]
[16]     0.0    0.00    0.00    1404+1       std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                                1603             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
                                 200             std::vector<int, std::allocator<int> >::begin() const <cycle 2> [23]
                                 200             bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&) <cycle 2> [15]
                                 200             void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&) <cycle 2> [31]
                                   1             void __gnu_cxx::__alloc_traits<std::allocator<std::string> >::construct<std::string>(std::allocator<std::string>&, std::string*, std::string const&) <cycle 2> [42]
                                   1             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
-----------------------------------------------
                                 800             std::vector<int, std::allocator<int> >::begin() [17]
                0.00    0.00     200/1200        __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [76]
                0.00    0.00    1000/1200        std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
[17]     0.0    0.00    0.00    1200+800     std::vector<int, std::allocator<int> >::begin() [17]
                                 800             std::vector<int, std::allocator<int> >::begin() [17]
-----------------------------------------------
                0.00    0.00     400/1000        std::vector<std::string, std::allocator<std::string> >::end() [116]
                0.00    0.00     600/1000        main <cycle 1> [4]
[18]     0.0    0.00    0.00    1000         std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&) [18]
                0.00    0.00     400/3404        std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
-----------------------------------------------
                                 600             int* std::copy_backward<int*, int*>(int*, int*, int*) <cycle 3> [27]
                0.00    0.00     400/400         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
[19]     0.0    0.00    0.00    1000         int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) <cycle 3> [19]
                0.00    0.00     200/400         void std::_Destroy<int*>(int*, int*) [28]
                                 400             std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() <cycle 3> [24]
-----------------------------------------------
                                 800             bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&) <cycle 2> [15]
[20]     0.0    0.00    0.00     800         std::vector<int, std::allocator<int> >::end() <cycle 2> [20]
                                 800             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
-----------------------------------------------
                                 800             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
[21]     0.0    0.00    0.00     800         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) <cycle 2> [21]
                0.00    0.00     200/400         void std::_Destroy<int*>(int*, int*) [28]
                                 200             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
-----------------------------------------------
                0.00    0.00     200/400         __static_initialization_and_destruction_0(int, int) [29]
                0.00    0.00     200/400         std::vector<int, std::allocator<int> >::push_back(int const&) <cycle 1> [38]
[22]     0.0    0.00    0.00     400         __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator*() const [22]
-----------------------------------------------
                                 200             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
                0.00    0.00     200/3404        std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
[23]     0.0    0.00    0.00     400         std::vector<int, std::allocator<int> >::begin() const <cycle 2> [23]
                                 400             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
-----------------------------------------------
                                 400             int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) <cycle 3> [19]
[24]     0.0    0.00    0.00     400         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() <cycle 3> [24]
                                 400             int* std::copy_backward<int*, int*>(int*, int*, int*) <cycle 3> [27]
-----------------------------------------------
                0.00    0.00     200/400         bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [34]
                0.00    0.00     200/400         __gnu_cxx::__normal_iterator<char*, std::string>::operator*() const [75]
[25]     0.0    0.00    0.00     400         std::string* std::vector<std::string, std::allocator<std::string> >::_M_allocate_and_copy<std::string*>(unsigned int, std::string*, std::string*) [25]
-----------------------------------------------
                0.00    0.00     400/400         __static_initialization_and_destruction_0(int, int) [29]
[26]     0.0    0.00    0.00     400         std::vector<std::string, std::allocator<std::string> >::begin() [26]
                0.00    0.00     400/3404        std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
-----------------------------------------------
                                 400             std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() <cycle 3> [24]
[27]     0.0    0.00    0.00     400         int* std::copy_backward<int*, int*>(int*, int*, int*) <cycle 3> [27]
                                 600             int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) <cycle 3> [19]
-----------------------------------------------
                0.00    0.00     200/400         int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) <cycle 3> [19]
                0.00    0.00     200/400         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) <cycle 2> [21]
[28]     0.0    0.00    0.00     400         void std::_Destroy<int*>(int*, int*) [28]
-----------------------------------------------
                0.00    0.00     200/200         frame_dummy [8]
[29]     0.0    0.00    0.00     200         __static_initialization_and_destruction_0(int, int) [29]
                0.00    0.00     400/400         std::vector<std::string, std::allocator<std::string> >::begin() [26]
                0.00    0.00     200/200         __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator++() [32]
                0.00    0.00     200/400         __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator*() const [22]
                0.00    0.00     200/9270        std::vector<int, std::allocator<int> >::reserve(unsigned int) <cycle 1> [12]
-----------------------------------------------
                0.00    0.00     200/200         int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&) [44]
[30]     0.0    0.00    0.00     200         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [30]
-----------------------------------------------
                                 200             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
[31]     0.0    0.00    0.00     200         void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&) <cycle 2> [31]
                                 200             std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned int) <cycle 2> [36]
-----------------------------------------------
                0.00    0.00     200/200         __static_initialization_and_destruction_0(int, int) [29]
[32]     0.0    0.00    0.00     200         __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator++() [32]
                0.00    0.00     200/200         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int) [37]
                0.00    0.00     200/200         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
-----------------------------------------------
                0.00    0.00     200/200         std::vector<int, std::allocator<int> >::push_back(int const&) <cycle 1> [38]
[33]     0.0    0.00    0.00     200         __gnu_cxx::__normal_iterator<char*, std::string>::operator++() [33]
-----------------------------------------------
                0.00    0.00     200/200         std::vector<int, std::allocator<int> >::push_back(int const&) <cycle 1> [38]
[34]     0.0    0.00    0.00     200         bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [34]
                0.00    0.00     200/400         std::string* std::vector<std::string, std::allocator<std::string> >::_M_allocate_and_copy<std::string*>(unsigned int, std::string*, std::string*) [25]
-----------------------------------------------
                0.00    0.00     200/200         __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator++() [32]
[35]     0.0    0.00    0.00     200         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [35]
                0.00    0.00     200/3404        std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
-----------------------------------------------
                                 200             void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&) <cycle 2> [31]
[36]     0.0    0.00    0.00     200         std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned int) <cycle 2> [36]
                                 200             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
-----------------------------------------------
                0.00    0.00     200/200         __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator++() [32]
[37]     0.0    0.00    0.00     200         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int) [37]
-----------------------------------------------
                                 200             main <cycle 1> [4]
[38]     0.0    0.00    0.00     200         std::vector<int, std::allocator<int> >::push_back(int const&) <cycle 1> [38]
                0.00    0.00     200/400         __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator*() const [22]
                0.00    0.00     200/200         __gnu_cxx::__normal_iterator<char*, std::string>::operator++() [33]
                0.00    0.00     200/200         bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [34]
                                 200             std::vector<int, std::allocator<int> >::reserve(unsigned int) <cycle 1> [12]
-----------------------------------------------
                0.00    0.00     200/200         process_data_line(std::string const&) [47]
[39]     0.0    0.00    0.00     200         std::vector<int, std::allocator<int> >::~vector() [39]
                0.00    0.00     200/9270        std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) <cycle 1> [10]
-----------------------------------------------
                                 200             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
[40]     0.0    0.00    0.00     200         int* std::copy<int*, int*>(int*, int*, int*) <cycle 2> [40]
                                 400             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
-----------------------------------------------
                0.00    0.00     200/200         main <cycle 1> [4]
[41]     0.0    0.00    0.00     200         __do_global_dtors_aux [41]
-----------------------------------------------
                                   1             std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
[42]     0.0    0.00    0.00       1         void __gnu_cxx::__alloc_traits<std::allocator<std::string> >::construct<std::string>(std::allocator<std::string>&, std::string*, std::string const&) <cycle 2> [42]
                                   1             std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
[43]     0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::__normal_iterator(std::string* const&) [43]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) <cycle 2> [14]
[44]     0.0    0.00    0.00       1         int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&) [44]
                0.00    0.00     200/200         __gnu_cxx::new_allocator<int>::construct(int*, int const&) [30]
-----------------------------------------------
                0.00    0.00       1/1           main <cycle 1> [4]
[45]     0.0    0.00    0.00       1         void std::replace<__gnu_cxx::__normal_iterator<char*, std::string>, char>(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const&, char const&) [45]
                0.00    0.00       3/3404        std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) <cycle 2> [16]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [29] __static_initialization_and_destruction_0(int, int) [24] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [27] int* std::copy_backward<int*, int*>(int*, int*, int*)
  [30] __gnu_cxx::new_allocator<int>::construct(int*, int const&) [37] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned int) [13] int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
  [42] void __gnu_cxx::__alloc_traits<std::allocator<std::string> >::construct<std::string>(std::allocator<std::string>&, std::string*, std::string const&) [14] std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [44] int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
  [31] void __gnu_cxx::__alloc_traits<std::allocator<int> >::construct<int>(std::allocator<int>&, int*, int const&) [25] std::string* std::vector<std::string, std::allocator<std::string> >::_M_allocate_and_copy<std::string*>(unsigned int, std::string*, std::string*) [21] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [32] __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator++() [26] std::vector<std::string, std::allocator<std::string> >::begin() [40] int* std::copy<int*, int*>(int*, int*, int*)
  [43] __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::__normal_iterator(std::string* const&) [18] std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&) [45] void std::replace<__gnu_cxx::__normal_iterator<char*, std::string>, char>(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const&, char const&)
  [33] __gnu_cxx::__normal_iterator<char*, std::string>::operator++() [16] std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [28] void std::_Destroy<int*>(int*, int*)
  [15] bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&) [19] int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned int, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [41] __do_global_dtors_aux
  [34] bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&) [20] std::vector<int, std::allocator<int> >::end() [4] main
  [22] __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator*() const [17] std::vector<int, std::allocator<int> >::begin() [1] <cycle 1>
  [35] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [12] std::vector<int, std::allocator<int> >::reserve(unsigned int) [2] <cycle 2>
  [11] std::vector<int, std::allocator<int> >::end() const [38] std::vector<int, std::allocator<int> >::push_back(int const&) [3] <cycle 3>
  [23] std::vector<int, std::allocator<int> >::begin() const [39] std::vector<int, std::allocator<int> >::~vector()
  [36] std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned int) [10] std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
